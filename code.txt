import random
import string
import datetime


# Function to generate a random number between 1 and 1000
def generate_random_number():
    return random.randint(1, 1000)


# Function to generate a random "tryhard" gamertag (shorter and aggressive)
def generate_tryhard_gamertag(number):
    # Aggressive, tryhard-style prefixes and suffixes
    prefixes = ['Xx', 'Rage', 'Kill', 'Viper', 'Rekt', 'Dead', 'Noob', 'Fury', 'Venom', 'Chaos']
    suffixes = ['K1ll', 'V1per', 'Xx', 'Fury', 'R3kt', 'Slay', 'Rush', 'Blaze', 'Z3ro', 'V1per']

    # Generate a short and cool gamertag by combining prefix, suffix, and random number
    prefix = random.choice(prefixes)
    suffix = random.choice(suffixes)

    # Add a number to make it unique and short (ensuring the length is <= 8)
    random_number = random.randint(1, 99)  # A small number to keep the total length short
    gamertag = f"{prefix}{suffix}{random_number}"

    # Ensure the length does not exceed 8 characters by slicing if needed
    if len(gamertag) > 8:
        gamertag = gamertag[:8]

    return gamertag


# Function to generate a random secure password
def generate_password():
    # Letters (uppercase and lowercase)
    letters = string.ascii_letters
    # Symbols
    symbols = "!@#$%^&*()-_=+[{]}|;:'\",<.>/?"

    # Generate 12 random letters
    random_letters = ''.join(random.choices(letters, k=12))

    # Generate 2 random symbols
    random_symbols = ''.join(random.choices(symbols, k=2))

    # Combine them and shuffle to ensure randomness
    password = random_letters + random_symbols
    password_list = list(password)
    random.shuffle(password_list)
    return ''.join(password_list)


# Function to generate a unique password for Gmail
def generate_gmail_password():
    # Generate 12 random letters and 2 symbols specifically for Gmail password
    letters = string.ascii_letters
    symbols = "!@#$%^&*()-_=+[{]}|;:'\",<.>/?"

    # Generate 12 random letters for the Gmail password
    random_letters = ''.join(random.choices(letters, k=12))

    # Generate 2 random symbols
    random_symbols = ''.join(random.choices(symbols, k=2))

    # Combine and shuffle
    gmail_password = random_letters + random_symbols
    gmail_password_list = list(gmail_password)
    random.shuffle(gmail_password_list)
    return ''.join(gmail_password_list)


# Function to generate a random Gmail address based on a real name
def generate_gmail(first_name, last_name):
    # Generate a random number to append to the Gmail address
    random_number = random.randint(1, 1000)

    # Format the Gmail address
    gmail_address = f"{first_name.lower()}.{last_name.lower()}{random_number}@gmail.com"
    return gmail_address


# Function to generate a random full name (first and last name)
def generate_name():
    first_names = ["John", "Jane", "Michael", "Emily", "James", "Sarah", "David", "Mary", "Daniel", "Laura"]
    last_names = ["Smith", "Baker", "Johnson", "Williams", "Brown", "Jones", "Miller", "Davis", "Garcia", "Rodriguez"]

    # Randomly select a first name and last name
    first_name = random.choice(first_names)
    last_name = random.choice(last_names)

    return first_name, last_name


# Function to generate a random birthday (age between 18 and 50 years old)
def generate_birthday():
    # Get today's date
    today = datetime.date.today()

    # Calculate the earliest year for an 18-year-old
    min_year = today.year - 50  # Max age = 50
    max_year = today.year - 18  # Min age = 18

    # Randomly choose a year between the calculated range
    year = random.randint(min_year, max_year)

    # Randomly choose a month (1 to 12)
    month = random.randint(1, 12)

    # Randomly choose a day based on the month and year
    # Use try-except to handle invalid dates (e.g., February 30)
    try:
        birthday = datetime.date(year, month, random.randint(1, 28))  # Keeping it simple for days 1-28
    except ValueError:
        # If the day is invalid, retry
        return generate_birthday()

    return birthday


# Function to get a random Bible verse about guidance
def get_bible_verse():
    verses = [
        "Proverbs 3:5-6: Trust in the Lord with all your heart and lean not on your own understanding; in all your ways submit to Him, and He will make your paths straight.",
        "Psalm 25:4-5: Show me your ways, Lord, teach me your paths. Guide me in your truth and teach me, for you are God my Savior, and my hope is in you all day long.",
        "Isaiah 58:11: The Lord will guide you always; He will satisfy your needs in a sun-scorched land and will strengthen your frame. You will be like a well-watered garden, like a spring whose waters never fail.",
        "Psalm 32:8: I will instruct you and teach you in the way you should go; I will counsel you with my loving eye on you.",
        "James 1:5: If any of you lacks wisdom, let him ask of God, who gives to all liberally and without reproach, and it will be given to him.",
        "John 16:13: But when He, the Spirit of truth, comes, He will guide you into all the truth.",
        "Proverbs 16:9: In their hearts humans plan their course, but the Lord establishes their steps."
    ]

    # Randomly select a verse from the list
    return random.choice(verses)


# Main function to generate and display the random information
def main():
    random_number = generate_random_number()
    print(f"The random number generated is: {random_number}")

    # Generate a random name (first and last)
    first_name, last_name = generate_name()
    print(f"Generated Name: {first_name} {last_name}")

    # Generate the tryhard-style gamertag corresponding to the random number
    gamertag = generate_tryhard_gamertag(random_number)
    print(f"The generated tryhard-style gamertag for the number {random_number} is: {gamertag}")

    # Generate a secure password for the user (for webpage, etc.)
    password = generate_password()
    print(f"The randomly generated secure password is: {password}")

    # Generate a random Gmail address
    gmail_address = generate_gmail(first_name, last_name)
    print(f"The randomly generated Gmail address is: {gmail_address}")

    # Generate a unique Gmail password
    gmail_password = generate_gmail_password()
    print(f"The randomly generated Gmail password is: {gmail_password}")

    # Generate a random birthday
    birthday = generate_birthday()
    print(f"The randomly generated birthday is: {birthday}")

    # Get a random Bible verse about guidance
    bible_verse = get_bible_verse()
    print(f"A random Bible verse about guidance: {bible_verse}")

    print("\nUse the information above to set up your webpage!")


if __name__ == "__main__":
    main()